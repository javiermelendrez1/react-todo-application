{"ast":null,"code":"var _jsxFileName = \"/Users/javiermelendrez/Documents/GitHub/react-todo-application/react-todo-application/src/components/TodoInput/TodoInput.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react'; //import material ui\n\nimport TextField from '@mui/material/TextField';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodoInput = ({\n  addTodo\n}) => {\n  _s();\n\n  //creating a counter for the index of the array of todos\n  let indexCounter = 0; //create a state for the input\n\n  const [input, setInput] = useState(''); //create a handle change function and handle key press function to listen for the input\n\n  const handleChange = e => {\n    //input is equal to the target value of the text field\n    setInput(e.target.value);\n  }; //create a function to listen for the user enter key press\n\n\n  const handleKeypress = e => {\n    if (e.key === 'Enter') {\n      //if the key press is entered create a new object with them input\n      const newTodo = {\n        id: indexCounter,\n        label: input,\n        completed: false\n      }; //increase the counter of the index\n\n      indexCounter++; //call the addTodo function pass in the object\n\n      addTodo(newTodo); //change input value to an emppty string\n\n      setInput('');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(TextField, {\n    fullWidth: true,\n    id: \"outlined-basic\",\n    label: \"todo\",\n    variant: \"outlined\",\n    onChange: handleChange,\n    onKeyPress: hand\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TodoInput, \"WVveI0ACa0LqOSOlGzu58xcz+KE=\");\n\n_c = TodoInput;\nexport default TodoInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoInput\");","map":{"version":3,"sources":["/Users/javiermelendrez/Documents/GitHub/react-todo-application/react-todo-application/src/components/TodoInput/TodoInput.js"],"names":["React","useState","TextField","TodoInput","addTodo","indexCounter","input","setInput","handleChange","e","target","value","handleKeypress","key","newTodo","id","label","completed","hand"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CACA;;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAe;AAAA;;AAC7B;AACA,MAAIC,YAAY,GAAG,CAAnB,CAF6B,CAG7B;;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC,CAJ6B,CAK7B;;AACA,QAAMO,YAAY,GAAIC,CAAD,IAAO;AACxB;AACAF,IAAAA,QAAQ,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AACH,GAHD,CAN6B,CAU7B;;;AACA,QAAMC,cAAc,GAAIH,CAAD,IAAO;AAC1B,QAAGA,CAAC,CAACI,GAAF,KAAU,OAAb,EAAqB;AACjB;AACA,YAAMC,OAAO,GAAG;AACZC,QAAAA,EAAE,EAAEV,YADQ;AAEZW,QAAAA,KAAK,EAAEV,KAFK;AAGZW,QAAAA,SAAS,EAAE;AAHC,OAAhB,CAFiB,CAOjB;;AACAZ,MAAAA,YAAY,GARK,CASjB;;AACAD,MAAAA,OAAO,CAACU,OAAD,CAAP,CAViB,CAWjB;;AACAP,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACH;AACJ,GAfD;;AAgBA,sBACI,QAAC,SAAD;AAAW,IAAA,SAAS,MAApB;AAAqB,IAAA,EAAE,EAAC,gBAAxB;AAAyC,IAAA,KAAK,EAAC,MAA/C;AAAsD,IAAA,OAAO,EAAC,UAA9D;AACA,IAAA,QAAQ,EAAEC,YADV;AAEA,IAAA,UAAU,EAAEU;AAFZ;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAjCD;;GAAMf,S;;KAAAA,S;AAkCN,eAAeA,SAAf","sourcesContent":["import React, { useState } from 'react';\n//import material ui\nimport TextField from '@mui/material/TextField';\n\nconst TodoInput = ({addTodo}) => {\n    //creating a counter for the index of the array of todos\n    let indexCounter = 0;\n    //create a state for the input\n    const [input, setInput] = useState('');\n    //create a handle change function and handle key press function to listen for the input\n    const handleChange = (e) => {\n        //input is equal to the target value of the text field\n        setInput(e.target.value);\n    }\n    //create a function to listen for the user enter key press\n    const handleKeypress = (e) => {\n        if(e.key === 'Enter'){\n            //if the key press is entered create a new object with them input\n            const newTodo = {\n                id: indexCounter,\n                label: input,\n                completed: false\n            };\n            //increase the counter of the index\n            indexCounter++;\n            //call the addTodo function pass in the object\n            addTodo(newTodo);\n            //change input value to an emppty string\n            setInput('');\n        }\n    }\n    return(\n        <TextField fullWidth id=\"outlined-basic\" label=\"todo\" variant=\"outlined\"\n        onChange={handleChange}\n        onKeyPress={hand}\n        /> \n    );\n};\nexport default TodoInput;"]},"metadata":{},"sourceType":"module"}