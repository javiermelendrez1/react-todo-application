{"ast":null,"code":"var _jsxFileName = \"/Users/javiermelendrez/Documents/GitHub/react-todo-application/react-todo-application/src/components/TodoList/TodoList.js\";\nimport React, { useState } from 'react'; //import material ui\n\nimport ListItem from '@mui/material/ListItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport Checkbox from '@mui/material/Checkbox';\nimport IconButton from '@mui/material/IconButton';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport RadioButtonUncheckedIcon from '@mui/icons-material/RadioButtonUnchecked';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodoList = ({\n  todo,\n  setTodo\n}) => {\n  //create a function to handle when the checkbox is clicked\n  const handleChange = id => {\n    //take in the unique id of the todo\n    //call the set todo function\n    setTodo( //map the todo array\n    todo.map(task => {\n      //if the array id === the unique passed in\n      //change completed boolean value to oppisite of what it was\n      if (task.id === id) {\n        return { ...task,\n          completed: !task.completed\n        };\n      }\n\n      return task;\n    }));\n  }; //create function to handle the button delete\n\n\n  const handleClick = id => {\n    //this function also takes in the unique id\n    //wee areee going to set todo to the return of filtering the array for all the todo\n    //not equal to the unique id\n    setTodo(todo.filter(task => task.id !== id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"list\", {\n    children: todo.map(task => {\n      console.log(task);\n      return /*#__PURE__*/_jsxDEV(ListItem, {\n        className: \"list-item\",\n        children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n          children: /*#__PURE__*/_jsxDEV(Checkbox, {\n            edge: \"start\",\n            checked: task.completed,\n            tabIndex: -1,\n            disableRipple: true,\n            icon: /*#__PURE__*/_jsxDEV(RadioButtonUncheckedIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 43\n            }, this),\n            checkedIcon: /*#__PURE__*/_jsxDEV(CheckCircleIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 50\n            }, this),\n            onChange: () => handleChange(task.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          id: task.label,\n          primary: task.label,\n          style: {\n            textDecoration: task.completed ? 'line-through' : 'none'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          edge: \"end\",\n          \"aria-label\": \"delete\",\n          onClick: () => handleClick(task.id),\n          children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 29\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 25\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["/Users/javiermelendrez/Documents/GitHub/react-todo-application/react-todo-application/src/components/TodoList/TodoList.js"],"names":["React","useState","ListItem","ListItemIcon","ListItemText","Checkbox","IconButton","DeleteIcon","RadioButtonUncheckedIcon","CheckCircleIcon","TodoList","todo","setTodo","handleChange","id","map","task","completed","handleClick","filter","console","log","label","textDecoration"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CACA;;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,OAAOC,wBAAP,MAAqC,0CAArC;AACA,OAAOC,eAAP,MAA4B,iCAA5B;;;AACA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAuB;AACpC;AACA,QAAMC,YAAY,GAAIC,EAAD,IAAQ;AACzB;AACA;AACAF,IAAAA,OAAO,EACH;AACAD,IAAAA,IAAI,CAACI,GAAL,CAASC,IAAI,IAAI;AACb;AACA;AACA,UAAIA,IAAI,CAACF,EAAL,KAAYA,EAAhB,EAAoB;AAChB,eAAO,EACH,GAAGE,IADA;AAEHC,UAAAA,SAAS,EAAE,CAACD,IAAI,CAACC;AAFd,SAAP;AAIH;;AACD,aAAOD,IAAP;AACH,KAVD,CAFG,CAAP;AAcH,GAjBD,CAFoC,CAoBpC;;;AACA,QAAME,WAAW,GAAIJ,EAAD,IAAQ;AACxB;AACA;AACA;AACAF,IAAAA,OAAO,CACHD,IAAI,CAACQ,MAAL,CAAYH,IAAI,IAAIA,IAAI,CAACF,EAAL,KAAYA,EAAhC,CADG,CAAP;AAGH,GAPD;;AAQA,sBACI;AAAA,cAEQH,IAAI,CAACI,GAAL,CAAUC,IAAD,IAAU;AACfI,MAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACA,0BACI,QAAC,QAAD;AAAwB,QAAA,SAAS,EAAC,WAAlC;AAAA,gCACI,QAAC,YAAD;AAAA,iCACI,QAAC,QAAD;AACI,YAAA,IAAI,EAAC,OADT;AAEI,YAAA,OAAO,EAAEA,IAAI,CAACC,SAFlB;AAGI,YAAA,QAAQ,EAAE,CAAC,CAHf;AAII,YAAA,aAAa,MAJjB;AAKI,YAAA,IAAI,eAAE,QAAC,wBAAD;AAAA;AAAA;AAAA;AAAA,oBALV;AAMI,YAAA,WAAW,eAAE,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,oBANjB;AAOI,YAAA,QAAQ,EAAE,MAAMJ,YAAY,CAACG,IAAI,CAACF,EAAN;AAPhC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAYI,QAAC,YAAD;AAAc,UAAA,EAAE,EAAEE,IAAI,CAACM,KAAvB;AAA8B,UAAA,OAAO,EAAEN,IAAI,CAACM,KAA5C;AACI,UAAA,KAAK,EAAE;AAAEC,YAAAA,cAAc,EAAEP,IAAI,CAACC,SAAL,GAAiB,cAAjB,GAAkC;AAApD;AADX;AAAA;AAAA;AAAA;AAAA,gBAZJ,eAeI,QAAC,UAAD;AAAY,UAAA,IAAI,EAAC,KAAjB;AAAuB,wBAAW,QAAlC;AACI,UAAA,OAAO,EAAE,MAAMC,WAAW,CAACF,IAAI,CAACF,EAAN,CAD9B;AAAA,iCAGI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,gBAfJ;AAAA,SAAeE,IAAI,CAACF,EAApB;AAAA;AAAA;AAAA;AAAA,cADJ;AAyBH,KA3BD;AAFR;AAAA;AAAA;AAAA;AAAA,UADJ;AAiCH,CA9DD;;KAAMJ,Q;AA+DN,eAAeA,QAAf","sourcesContent":["import React, { useState } from 'react';\n//import material ui\nimport ListItem from '@mui/material/ListItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport Checkbox from '@mui/material/Checkbox';\nimport IconButton from '@mui/material/IconButton';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport RadioButtonUncheckedIcon from '@mui/icons-material/RadioButtonUnchecked';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nconst TodoList = ({ todo, setTodo }) => {\n    //create a function to handle when the checkbox is clicked\n    const handleChange = (id) => {\n        //take in the unique id of the todo\n        //call the set todo function\n        setTodo(\n            //map the todo array\n            todo.map(task => {\n                //if the array id === the unique passed in\n                //change completed boolean value to oppisite of what it was\n                if (task.id === id) {\n                    return {\n                        ...task,\n                        completed: !task.completed\n                    };\n                }\n                return task;\n            })\n        );\n    }\n    //create function to handle the button delete\n    const handleClick = (id) => {\n        //this function also takes in the unique id\n        //wee areee going to set todo to the return of filtering the array for all the todo\n        //not equal to the unique id\n        setTodo(\n            todo.filter(task => task.id !== id)\n        );\n    }\n    return (\n        <list>\n            {\n                todo.map((task) => {\n                    console.log(task)\n                    return (\n                        <ListItem key={task.id} className=\"list-item\">\n                            <ListItemIcon>\n                                <Checkbox\n                                    edge=\"start\"\n                                    checked={task.completed}\n                                    tabIndex={-1}\n                                    disableRipple\n                                    icon={<RadioButtonUncheckedIcon />}\n                                    checkedIcon={<CheckCircleIcon />}\n                                    onChange={() => handleChange(task.id)}\n                                />\n                            </ListItemIcon>\n                            <ListItemText id={task.label} primary={task.label}\n                                style={{ textDecoration: task.completed ? 'line-through' : 'none' }}\n                            />\n                            <IconButton edge=\"end\" aria-label=\"delete\"\n                                onClick={() => handleClick(task.id)}\n                            >\n                                <DeleteIcon\n                                />\n                            </IconButton>\n                        </ListItem>\n\n                    );\n                })\n            }\n        </list>);\n};\nexport default TodoList;"]},"metadata":{},"sourceType":"module"}