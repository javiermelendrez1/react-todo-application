{"ast":null,"code":"import _objectSpread from\"/Users/javiermelendrez/Documents/GitHub/react-todo-application/react-todo-application/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React,{useState}from'react';//import material ui\nimport ListItem from'@mui/material/ListItem';import ListItemIcon from'@mui/material/ListItemIcon';import ListItemText from'@mui/material/ListItemText';import Checkbox from'@mui/material/Checkbox';import IconButton from'@mui/material/IconButton';import DeleteIcon from'@mui/icons-material/Delete';import RadioButtonUncheckedIcon from'@mui/icons-material/RadioButtonUnchecked';import CheckCircleIcon from'@mui/icons-material/CheckCircle';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var TodoList=function TodoList(_ref){var todo=_ref.todo,setTodo=_ref.setTodo;//create a function to handle when the checkbox is clicked\nvar handleChange=function handleChange(id){//take in the unique id of the todo\n//call the set todo function\nsetTodo(//map the todo array\ntodo.map(function(task){//if the array id === the unique passed in\n//change completed boolean value to oppisite of what it was\nif(task.id===id){return _objectSpread(_objectSpread({},task),{},{completed:!task.completed});}return task;}));};//create function to handle the button delete\nvar handleClick=function handleClick(id){//this function also takes in the unique id\n//wee areee going to set todo to the return of filtering the array for all the todo\n//not equal to the unique id\nsetTodo(todo.filter(function(task){return task.id!==id;}));};return/*#__PURE__*/_jsx(\"list\",{children:todo.map(function(task){console.log(task);return/*#__PURE__*/_jsxs(ListItem,{className:\"list-item\",children:[/*#__PURE__*/_jsx(ListItemIcon,{children:/*#__PURE__*/_jsx(Checkbox,{edge:\"start\",checked:task.completed,tabIndex:-1,disableRipple:true,icon:/*#__PURE__*/_jsx(RadioButtonUncheckedIcon,{}),checkedIcon:/*#__PURE__*/_jsx(CheckCircleIcon,{}),onChange:function onChange(){return handleChange(task.id);}})}),/*#__PURE__*/_jsx(ListItemText,{id:task.label,primary:task.label,style:{textDecoration:task.completed?'line-through':'none'}}),/*#__PURE__*/_jsx(IconButton,{edge:\"end\",\"aria-label\":\"delete\",onClick:function onClick(){return handleClick(task.id);},children:/*#__PURE__*/_jsx(DeleteIcon,{})})]},task.id);})});};export default TodoList;","map":{"version":3,"sources":["/Users/javiermelendrez/Documents/GitHub/react-todo-application/react-todo-application/src/components/TodoList/TodoList.js"],"names":["React","useState","ListItem","ListItemIcon","ListItemText","Checkbox","IconButton","DeleteIcon","RadioButtonUncheckedIcon","CheckCircleIcon","TodoList","todo","setTodo","handleChange","id","map","task","completed","handleClick","filter","console","log","label","textDecoration"],"mappings":"2MAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA;AACA,MAAOC,CAAAA,QAAP,KAAqB,wBAArB,CACA,MAAOC,CAAAA,YAAP,KAAyB,4BAAzB,CACA,MAAOC,CAAAA,YAAP,KAAyB,4BAAzB,CACA,MAAOC,CAAAA,QAAP,KAAqB,wBAArB,CACA,MAAOC,CAAAA,UAAP,KAAuB,0BAAvB,CACA,MAAOC,CAAAA,UAAP,KAAuB,4BAAvB,CACA,MAAOC,CAAAA,wBAAP,KAAqC,0CAArC,CACA,MAAOC,CAAAA,eAAP,KAA4B,iCAA5B,C,wFACA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,MAAuB,IAApBC,CAAAA,IAAoB,MAApBA,IAAoB,CAAdC,OAAc,MAAdA,OAAc,CACpC;AACA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,EAAD,CAAQ,CACzB;AACA;AACAF,OAAO,CACH;AACAD,IAAI,CAACI,GAAL,CAAS,SAAAC,IAAI,CAAI,CACb;AACA;AACA,GAAIA,IAAI,CAACF,EAAL,GAAYA,EAAhB,CAAoB,CAChB,sCACOE,IADP,MAEIC,SAAS,CAAE,CAACD,IAAI,CAACC,SAFrB,GAIH,CACD,MAAOD,CAAAA,IAAP,CACH,CAVD,CAFG,CAAP,CAcH,CAjBD,CAkBA;AACA,GAAME,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACJ,EAAD,CAAQ,CACxB;AACA;AACA;AACAF,OAAO,CACHD,IAAI,CAACQ,MAAL,CAAY,SAAAH,IAAI,QAAIA,CAAAA,IAAI,CAACF,EAAL,GAAYA,EAAhB,EAAhB,CADG,CAAP,CAGH,CAPD,CAQA,mBACI,sBAEQH,IAAI,CAACI,GAAL,CAAS,SAACC,IAAD,CAAU,CACfI,OAAO,CAACC,GAAR,CAAYL,IAAZ,EACA,mBACI,MAAC,QAAD,EAAwB,SAAS,CAAC,WAAlC,wBACI,KAAC,YAAD,wBACI,KAAC,QAAD,EACI,IAAI,CAAC,OADT,CAEI,OAAO,CAAEA,IAAI,CAACC,SAFlB,CAGI,QAAQ,CAAE,CAAC,CAHf,CAII,aAAa,KAJjB,CAKI,IAAI,cAAE,KAAC,wBAAD,IALV,CAMI,WAAW,cAAE,KAAC,eAAD,IANjB,CAOI,QAAQ,CAAE,0BAAMJ,CAAAA,YAAY,CAACG,IAAI,CAACF,EAAN,CAAlB,EAPd,EADJ,EADJ,cAYI,KAAC,YAAD,EAAc,EAAE,CAAEE,IAAI,CAACM,KAAvB,CAA8B,OAAO,CAAEN,IAAI,CAACM,KAA5C,CACI,KAAK,CAAE,CAAEC,cAAc,CAAEP,IAAI,CAACC,SAAL,CAAiB,cAAjB,CAAkC,MAApD,CADX,EAZJ,cAeI,KAAC,UAAD,EAAY,IAAI,CAAC,KAAjB,CAAuB,aAAW,QAAlC,CACI,OAAO,CAAE,yBAAMC,CAAAA,WAAW,CAACF,IAAI,CAACF,EAAN,CAAjB,EADb,uBAGI,KAAC,UAAD,IAHJ,EAfJ,GAAeE,IAAI,CAACF,EAApB,CADJ,CAyBH,CA3BD,CAFR,EADJ,CAiCH,CA9DD,CA+DA,cAAeJ,CAAAA,QAAf","sourcesContent":["import React, { useState } from 'react';\n//import material ui\nimport ListItem from '@mui/material/ListItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport Checkbox from '@mui/material/Checkbox';\nimport IconButton from '@mui/material/IconButton';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport RadioButtonUncheckedIcon from '@mui/icons-material/RadioButtonUnchecked';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nconst TodoList = ({ todo, setTodo }) => {\n    //create a function to handle when the checkbox is clicked\n    const handleChange = (id) => {\n        //take in the unique id of the todo\n        //call the set todo function\n        setTodo(\n            //map the todo array\n            todo.map(task => {\n                //if the array id === the unique passed in\n                //change completed boolean value to oppisite of what it was\n                if (task.id === id) {\n                    return {\n                        ...task,\n                        completed: !task.completed\n                    };\n                }\n                return task;\n            })\n        );\n    }\n    //create function to handle the button delete\n    const handleClick = (id) => {\n        //this function also takes in the unique id\n        //wee areee going to set todo to the return of filtering the array for all the todo\n        //not equal to the unique id\n        setTodo(\n            todo.filter(task => task.id !== id)\n        );\n    }\n    return (\n        <list>\n            {\n                todo.map((task) => {\n                    console.log(task)\n                    return (\n                        <ListItem key={task.id} className=\"list-item\">\n                            <ListItemIcon>\n                                <Checkbox\n                                    edge=\"start\"\n                                    checked={task.completed}\n                                    tabIndex={-1}\n                                    disableRipple\n                                    icon={<RadioButtonUncheckedIcon />}\n                                    checkedIcon={<CheckCircleIcon />}\n                                    onChange={() => handleChange(task.id)}\n                                />\n                            </ListItemIcon>\n                            <ListItemText id={task.label} primary={task.label}\n                                style={{ textDecoration: task.completed ? 'line-through' : 'none' }}\n                            />\n                            <IconButton edge=\"end\" aria-label=\"delete\"\n                                onClick={() => handleClick(task.id)}\n                            >\n                                <DeleteIcon\n                                />\n                            </IconButton>\n                        </ListItem>\n\n                    );\n                })\n            }\n        </list>);\n};\nexport default TodoList;"]},"metadata":{},"sourceType":"module"}