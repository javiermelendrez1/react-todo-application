{"ast":null,"code":"var _jsxFileName = \"/Users/javiermelendrez/Documents/GitHub/react-todo-application/react-todo-application/src/components/TodoList/TodoList.js\";\nimport React, { useState } from 'react'; //import material ui\n\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport Checkbox from '@mui/material/Checkbox';\nimport IconButton from '@mui/material/IconButton';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodoList = ({\n  todo,\n  setTodo\n}) => {\n  //create a function to handle when the checkbox is clicked\n  const handleChange = id => {\n    //take in the unique id of the todo\n    setTodo(todo.map(task => {\n      if (task.id === id) {\n        return { ...task\n        };\n      }\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"list\", {\n    children: todo.map(task => {\n      console.log(task);\n      return /*#__PURE__*/_jsxDEV(ListItem, {\n        children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n          children: /*#__PURE__*/_jsxDEV(Checkbox, {\n            edge: \"start\",\n            checked: task.completed,\n            tabIndex: -1,\n            disableRipple: true,\n            handleChange: () => handleChange(task.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          id: task.label,\n          primary: task.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          edge: \"end\",\n          \"aria-label\": \"delete\",\n          children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 29\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 25\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["/Users/javiermelendrez/Documents/GitHub/react-todo-application/react-todo-application/src/components/TodoList/TodoList.js"],"names":["React","useState","List","ListItem","ListItemButton","ListItemIcon","ListItemText","Checkbox","IconButton","DeleteIcon","TodoList","todo","setTodo","handleChange","id","map","task","console","log","completed","label"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CACA;;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;;;AACA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA;AAAP,CAAD,KAAqB;AAClC;AACA,QAAMC,YAAY,GAAIC,EAAD,IAAQ;AACzB;AACAF,IAAAA,OAAO,CACHD,IAAI,CAACI,GAAL,CAASC,IAAI,IAAI;AACb,UAAGA,IAAI,CAACF,EAAL,KAAYA,EAAf,EAAkB;AACd,eAAO,EACH,GAAGE;AADA,SAAP;AAGH;AACJ,KAND,CADG,CAAP;AASH,GAXD;;AAYA,sBACI;AAAA,cAEQL,IAAI,CAACI,GAAL,CAAUC,IAAD,IAAU;AACfC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,0BACI,QAAC,QAAD;AAAA,gCACI,QAAC,YAAD;AAAA,iCACI,QAAC,QAAD;AACA,YAAA,IAAI,EAAC,OADL;AAEA,YAAA,OAAO,EAAEA,IAAI,CAACG,SAFd;AAGA,YAAA,QAAQ,EAAE,CAAC,CAHX;AAIA,YAAA,aAAa,MAJb;AAKA,YAAA,YAAY,EAAE,MAAMN,YAAY,CAACG,IAAI,CAACF,EAAN;AALhC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAUI,QAAC,YAAD;AAAc,UAAA,EAAE,EAAEE,IAAI,CAACI,KAAvB;AAA8B,UAAA,OAAO,EAAEJ,IAAI,CAACI;AAA5C;AAAA;AAAA;AAAA;AAAA,gBAVJ,eAWI,QAAC,UAAD;AAAY,UAAA,IAAI,EAAC,KAAjB;AAAuB,wBAAW,QAAlC;AAAA,iCACI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAXJ;AAAA,SAAeJ,IAAI,CAACF,EAApB;AAAA;AAAA;AAAA;AAAA,cADJ;AAkBH,KApBD;AAFR;AAAA;AAAA;AAAA;AAAA,UADJ;AA0BH,CAxCD;;KAAMJ,Q;AAyCN,eAAeA,QAAf","sourcesContent":["import React, { useState } from 'react';\n//import material ui\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport Checkbox from '@mui/material/Checkbox';\nimport IconButton from '@mui/material/IconButton';\nimport DeleteIcon from '@mui/icons-material/Delete';\nconst TodoList = ({todo, setTodo}) => {\n    //create a function to handle when the checkbox is clicked\n    const handleChange = (id) => {\n        //take in the unique id of the todo\n        setTodo(\n            todo.map(task => {\n                if(task.id === id){\n                    return {\n                        ...task\n                    }\n                }\n            })\n        );\n    }\n    return(\n        <list>\n            {\n                todo.map((task) => {\n                    console.log(task)\n                    return(\n                        <ListItem key={task.id}>\n                            <ListItemIcon>\n                                <Checkbox \n                                edge=\"start\"\n                                checked={task.completed}\n                                tabIndex={-1}\n                                disableRipple\n                                handleChange={() => handleChange(task.id)}\n                                />\n                            </ListItemIcon>\n                            <ListItemText id={task.label} primary={task.label} />\n                            <IconButton edge=\"end\" aria-label=\"delete\">\n                                <DeleteIcon />\n                            </IconButton>\n                        </ListItem>\n\n                    );\n                })\n            }\n        </list>    );\n};\nexport default TodoList;"]},"metadata":{},"sourceType":"module"}