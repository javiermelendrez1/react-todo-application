{"ast":null,"code":"var _jsxFileName = \"/Users/javiermelendrez/Documents/GitHub/react-todo-application/react-todo-application/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css'; //import my components\n\nimport TodoInput from './components/TodoInput/TodoInput';\nimport TodoList from './components/TodoList/TodoList';\nimport BottomButtons from './components/BottomButtons/BottomButtons'; //import material ui components\n\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider, styled } from '@mui/material/styles';\nimport Paper from '@mui/material/Paper';\nimport TopHeading from './components/TopHeading/TopHeading';\nimport DARKBG from './images/bg-desktop-dark.jpg';\nimport LIGHTBG from './images/bg-desktop-light.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  //create state for todo\n  const [todo, setTodo] = useState([]); //initally an empty array\n  //create a function to add the todo to the array\n\n  const addTodo = newTodo => {\n    //passing in the new item\n    //adding the item and using spread syntax to put in the rest of the array\n    setTodo([newTodo, ...todo]);\n  };\n\n  const [darkMode, setDarkMode] = useState(false);\n  const darkTheme = createTheme({\n    palette: {\n      mode: darkMode ? 'dark' : 'light'\n    }\n  });\n  const styles = {\n    appContainer: {\n      backgroundImage: darkMode ? `url(${DARKBG})` : `url(${LIGHTBG})`\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: darkTheme,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.appContainer,\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"sm\",\n        children: [/*#__PURE__*/_jsxDEV(TopHeading, {\n          setDarkMode: setDarkMode,\n          darkMode: darkMode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Paper, {\n          children: [/*#__PURE__*/_jsxDEV(TodoInput, {\n            addTodo: addTodo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n            todo: todo,\n            setTodo: setTodo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(BottomButtons, {\n            todo: todo,\n            setTodo: setTodo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"0J/COubMPHSiDlRoFc0n5w0lScM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/javiermelendrez/Documents/GitHub/react-todo-application/react-todo-application/src/App.js"],"names":["TodoInput","TodoList","BottomButtons","Container","createTheme","ThemeProvider","styled","Paper","TopHeading","DARKBG","LIGHTBG","App","todo","setTodo","useState","addTodo","newTodo","darkMode","setDarkMode","darkTheme","palette","mode","styles","appContainer","backgroundImage"],"mappings":";;;AAAA,OAAO,WAAP,C,CAEA;;AACA,OAAOA,SAAP,MAAsB,kCAAtB;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,OAAOC,aAAP,MAA0B,0CAA1B,C,CACA;;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,WAAT,EAAsBC,aAAtB,EAAqCC,MAArC,QAAmD,sBAAnD;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,OAAOC,MAAP,MAAmB,8BAAnB;AACA,OAAOC,OAAP,MAAoB,+BAApB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBC,QAAQ,CAAC,EAAD,CAAhC,CAFa,CAEyB;AACtC;;AACA,QAAMC,OAAO,GAAIC,OAAD,IAAa;AAC3B;AACA;AACAH,IAAAA,OAAO,CAAC,CAACG,OAAD,EAAU,GAAGJ,IAAb,CAAD,CAAP;AACD,GAJD;;AAKA,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAMK,SAAS,GAAGf,WAAW,CAAC;AAC5BgB,IAAAA,OAAO,EAAE;AACPC,MAAAA,IAAI,EAAEJ,QAAQ,GAAG,MAAH,GAAY;AADnB;AADmB,GAAD,CAA7B;AAMA,QAAMK,MAAM,GAAG;AACbC,IAAAA,YAAY,EAAE;AACZC,MAAAA,eAAe,EAAEP,QAAQ,GAAI,OAAMR,MAAO,GAAjB,GAAuB,OAAMC,OAAQ;AADlD;AADD,GAAf;AAKA,sBACE,QAAC,aAAD;AAAe,IAAA,KAAK,EAAES,SAAtB;AAAA,2BACE;AAAK,MAAA,KAAK,EAAEG,MAAM,CAACC,YAAnB;AAAA,6BACA,QAAC,SAAD;AAAW,QAAA,QAAQ,EAAC,IAApB;AAAA,gCACE,QAAC,UAAD;AAAY,UAAA,WAAW,EAAEL,WAAzB;AAAsC,UAAA,QAAQ,EAAED;AAAhD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,KAAD;AAAA,kCAAO,QAAC,SAAD;AAAW,YAAA,OAAO,EAAEF;AAApB;AAAA;AAAA;AAAA;AAAA,kBAAP,eAEA,QAAC,QAAD;AAAU,YAAA,IAAI,EAAEH,IAAhB;AAAsB,YAAA,OAAO,EAAEC;AAA/B;AAAA;AAAA;AAAA;AAAA,kBAFA,eAGA,QAAC,aAAD;AAAe,YAAA,IAAI,EAAED,IAArB;AAA2B,YAAA,OAAO,EAAEC;AAApC;AAAA;AAAA;AAAA;AAAA,kBAHA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GApCQF,G;;KAAAA,G;AAsCT,eAAeA,GAAf","sourcesContent":["import './App.css';\n\n//import my components\nimport TodoInput from './components/TodoInput/TodoInput';\nimport TodoList from './components/TodoList/TodoList';\nimport BottomButtons from './components/BottomButtons/BottomButtons';\n//import material ui components\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider, styled } from '@mui/material/styles';\nimport Paper from '@mui/material/Paper';\nimport TopHeading from './components/TopHeading/TopHeading';\nimport DARKBG from './images/bg-desktop-dark.jpg';\nimport LIGHTBG from './images/bg-desktop-light.jpg';\n\nfunction App() {\n  //create state for todo\n  const [todo, setTodo] = useState([]); //initally an empty array\n  //create a function to add the todo to the array\n  const addTodo = (newTodo) => {\n    //passing in the new item\n    //adding the item and using spread syntax to put in the rest of the array\n    setTodo([newTodo, ...todo]);\n  };\n  const [darkMode, setDarkMode] = useState(false); \n  const darkTheme = createTheme({\n    palette: {\n      mode: darkMode ? 'dark' : 'light',\n    },\n    \n  });\n  const styles = {\n    appContainer: {\n      backgroundImage: darkMode ? `url(${DARKBG})` : `url(${LIGHTBG})`\n    }\n  }\n  return (\n    <ThemeProvider theme={darkTheme}>\n      <div style={styles.appContainer}>\n      <Container maxWidth=\"sm\">\n        <TopHeading setDarkMode={setDarkMode} darkMode={darkMode}/>\n        <Paper><TodoInput addTodo={addTodo} />\n        \n        <TodoList todo={todo} setTodo={setTodo}/>\n        <BottomButtons todo={todo} setTodo={setTodo}/>\n        </Paper>\n      </Container>\n      </div>\n    </ThemeProvider>\n\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}