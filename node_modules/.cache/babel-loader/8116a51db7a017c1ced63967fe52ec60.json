{"ast":null,"code":"import _toConsumableArray from\"/Users/javiermelendrez/Documents/GitHub/react-todo-application/react-todo-application/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/javiermelendrez/Documents/GitHub/react-todo-application/react-todo-application/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import'./App.css';import{useState}from'react';//import my components\nimport TodoInput from'./components/TodoInput/TodoInput';import TodoList from'./components/TodoList/TodoList';import BottomButtons from'./components/BottomButtons/BottomButtons';import TopHeading from'./components/TopHeading/TopHeading';//import material ui components\nimport Container from'@mui/material/Container';import Paper from'@mui/material/Paper';import{createTheme,ThemeProvider,styled}from'@mui/material/styles';//import background images\nimport DARKBG from'./images/bg-desktop-dark.jpg';import LIGHTBG from'./images/bg-desktop-light.jpg';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){//create state for todo\nvar _useState=useState([]),_useState2=_slicedToArray(_useState,2),todo=_useState2[0],setTodo=_useState2[1];//initally an empty array\n//create a function to add the todo to the array\nvar addTodo=function addTodo(newTodo){//passing in the new item\n//adding the item and using spread syntax to put in the rest of the array\nsetTodo([newTodo].concat(_toConsumableArray(todo)));};//state for the theme of the app\nvar _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),darkMode=_useState4[0],setDarkMode=_useState4[1];//style for the dark theme\nvar darkTheme=createTheme({palette:{mode:darkMode?'dark':'light'}});//style for the background image and paper container \nvar styles={appContainer:{backgroundImage:darkMode?\"url(\".concat(DARKBG,\")\"):\"url(\".concat(LIGHTBG,\")\"),backgroundRepeat:\"no-repeat\",height:'325px',paddingTop:'50px'},paperContainer:{marginBottom:'25px'},bottomButtonContainer:{borderTop:\"1px solid #dcdcdc\"}};return/*#__PURE__*/_jsx(ThemeProvider,{theme:darkTheme,children:/*#__PURE__*/_jsx(\"div\",{style:styles.appContainer,children:/*#__PURE__*/_jsxs(Container,{maxWidth:\"sm\",children:[/*#__PURE__*/_jsx(TopHeading,{setDarkMode:setDarkMode,darkMode:darkMode}),/*#__PURE__*/_jsx(Paper,{style:styles.paperContainer,children:/*#__PURE__*/_jsx(TodoInput,{addTodo:addTodo})}),/*#__PURE__*/_jsx(Paper,{children:/*#__PURE__*/_jsx(TodoList,{todo:todo,setTodo:setTodo})}),todo.length==0?null:/*#__PURE__*/_jsx(Paper,{style:styles.bottomButtonContainer,children:/*#__PURE__*/_jsx(BottomButtons,{todo:todo,setTodo:setTodo})})]})})});}export default App;","map":{"version":3,"sources":["/Users/javiermelendrez/Documents/GitHub/react-todo-application/react-todo-application/src/App.js"],"names":["useState","TodoInput","TodoList","BottomButtons","TopHeading","Container","Paper","createTheme","ThemeProvider","styled","DARKBG","LIGHTBG","App","todo","setTodo","addTodo","newTodo","darkMode","setDarkMode","darkTheme","palette","mode","styles","appContainer","backgroundImage","backgroundRepeat","height","paddingTop","paperContainer","marginBottom","bottomButtonContainer","borderTop","length"],"mappings":"gaAAA,MAAO,WAAP,CACA,OAASA,QAAT,KAAyB,OAAzB,CACA;AACA,MAAOC,CAAAA,SAAP,KAAsB,kCAAtB,CACA,MAAOC,CAAAA,QAAP,KAAqB,gCAArB,CACA,MAAOC,CAAAA,aAAP,KAA0B,0CAA1B,CACA,MAAOC,CAAAA,UAAP,KAAuB,oCAAvB,CAEA;AACA,MAAOC,CAAAA,SAAP,KAAsB,yBAAtB,CACA,MAAOC,CAAAA,KAAP,KAAkB,qBAAlB,CACA,OAASC,WAAT,CAAsBC,aAAtB,CAAqCC,MAArC,KAAmD,sBAAnD,CACA;AACA,MAAOC,CAAAA,MAAP,KAAmB,8BAAnB,CACA,MAAOC,CAAAA,OAAP,KAAoB,+BAApB,C,wFAEA,QAASC,CAAAA,GAAT,EAAe,CACb;AACA,cAAwBZ,QAAQ,CAAC,EAAD,CAAhC,wCAAOa,IAAP,eAAaC,OAAb,eAAsC;AACtC;AACA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,OAAD,CAAa,CAC3B;AACA;AACAF,OAAO,EAAEE,OAAF,4BAAcH,IAAd,GAAP,CACD,CAJD,CAKA;AACA,eAAgCb,QAAQ,CAAC,KAAD,CAAxC,yCAAOiB,QAAP,eAAiBC,WAAjB,eACA;AACA,GAAMC,CAAAA,SAAS,CAAGZ,WAAW,CAAC,CAC5Ba,OAAO,CAAE,CACPC,IAAI,CAAEJ,QAAQ,CAAG,MAAH,CAAY,OADnB,CADmB,CAAD,CAA7B,CAMA;AACA,GAAMK,CAAAA,MAAM,CAAG,CACbC,YAAY,CAAE,CACZC,eAAe,CAAEP,QAAQ,eAAUP,MAAV,oBAA6BC,OAA7B,KADb,CAEZc,gBAAgB,YAFJ,CAGZC,MAAM,CAAE,OAHI,CAIZC,UAAU,CAAE,MAJA,CADD,CAObC,cAAc,CAAE,CACdC,YAAY,CAAE,MADA,CAPH,CAUbC,qBAAqB,CAAE,CACrBC,SAAS,oBADY,CAVV,CAAf,CAcA,mBACE,KAAC,aAAD,EAAe,KAAK,CAAEZ,SAAtB,uBACE,YAAK,KAAK,CAAEG,MAAM,CAACC,YAAnB,uBACE,MAAC,SAAD,EAAW,QAAQ,CAAC,IAApB,wBACE,KAAC,UAAD,EAAY,WAAW,CAAEL,WAAzB,CAAsC,QAAQ,CAAED,QAAhD,EADF,cAEE,KAAC,KAAD,EAAO,KAAK,CAAEK,MAAM,CAACM,cAArB,uBAAqC,KAAC,SAAD,EAAW,OAAO,CAAEb,OAApB,EAArC,EAFF,cAIE,KAAC,KAAD,wBAAO,KAAC,QAAD,EAAU,IAAI,CAAEF,IAAhB,CAAsB,OAAO,CAAEC,OAA/B,EAAP,EAJF,CAKGD,IAAI,CAACmB,MAAL,EAAe,CAAf,CAAmB,IAAnB,cACC,KAAC,KAAD,EAAO,KAAK,CAAEV,MAAM,CAACQ,qBAArB,uBACE,KAAC,aAAD,EAAe,IAAI,CAAEjB,IAArB,CAA2B,OAAO,CAAEC,OAApC,EADF,EANJ,GADF,EADF,EADF,CAmBD,CAED,cAAeF,CAAAA,GAAf","sourcesContent":["import './App.css';\nimport { useState } from 'react';\n//import my components\nimport TodoInput from './components/TodoInput/TodoInput';\nimport TodoList from './components/TodoList/TodoList';\nimport BottomButtons from './components/BottomButtons/BottomButtons';\nimport TopHeading from './components/TopHeading/TopHeading';\n\n//import material ui components\nimport Container from '@mui/material/Container';\nimport Paper from '@mui/material/Paper';\nimport { createTheme, ThemeProvider, styled } from '@mui/material/styles';\n//import background images\nimport DARKBG from './images/bg-desktop-dark.jpg';\nimport LIGHTBG from './images/bg-desktop-light.jpg';\n\nfunction App() {\n  //create state for todo\n  const [todo, setTodo] = useState([]); //initally an empty array\n  //create a function to add the todo to the array\n  const addTodo = (newTodo) => {\n    //passing in the new item\n    //adding the item and using spread syntax to put in the rest of the array\n    setTodo([newTodo, ...todo]);\n  };\n  //state for the theme of the app\n  const [darkMode, setDarkMode] = useState(false);\n  //style for the dark theme\n  const darkTheme = createTheme({\n    palette: {\n      mode: darkMode ? 'dark' : 'light',\n    },\n\n  });\n  //style for the background image and paper container \n  const styles = {\n    appContainer: {\n      backgroundImage: darkMode ? `url(${DARKBG})` : `url(${LIGHTBG})`,\n      backgroundRepeat: `no-repeat`,\n      height: '325px',\n      paddingTop: '50px'\n    },\n    paperContainer: {\n      marginBottom: '25px'\n    },\n    bottomButtonContainer: {\n      borderTop: `1px solid #dcdcdc`\n    }\n  }\n  return (\n    <ThemeProvider theme={darkTheme}>\n      <div style={styles.appContainer}>\n        <Container maxWidth=\"sm\">\n          <TopHeading setDarkMode={setDarkMode} darkMode={darkMode} />\n          <Paper style={styles.paperContainer}><TodoInput addTodo={addTodo} />\n          </Paper>\n          <Paper><TodoList todo={todo} setTodo={setTodo} /></Paper>\n          {todo.length == 0 ? null :\n            <Paper style={styles.bottomButtonContainer}>\n              <BottomButtons todo={todo} setTodo={setTodo} />\n            </Paper>\n          }\n\n        </Container>\n      </div>\n    </ThemeProvider>\n\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}